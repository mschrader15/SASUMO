Metadata:
  # The name will also show up as the main folder for simulation 
  name: CFPaperParameters
  author: mcschrader@crimson.ua.edu
  output: ${oc.env:SENSITIVITY_ANALYSIS_OUTPUT}/${Metadata.name}/${datetime:now}
  run_id: ???
  cwd: ${.output}/${.run_id}
  simulation_root: ${oc.env:AIRPORT_HARPER_SUMO}
  random_seed: ${ParameterSweep.Variables.RandomSeed.val}
  mode: ParameterSweep

ParameterSweep:
  parallel_trials: 63 
  # N is the number of runs at each point in the sweep (for randomness)
  "N": 1
  preprocessing: None
  ManagerFunction: 
    module: functions.RemoteEmissionsSUMOFunc
    arguments:
  
  Variables: 

    RandomSeed:
      variable_name: random_seed
      group: ""
      val: ???
      gen_function: "" 
      distribution: 
        type: list
        params:
          start: 1
          stop: 1000
          num: 100
      
  Generators:
    - function: create_veh_distribution
      output_name: veh_distribution_file
      arguments:
        args:
          - variable_parameters: []
            fleet_composition: 1
            vehicle_name: car
            distribution_parameters: |
              length;uniform(4,6)
              vClass;passenger
              carFollowModel;IDM
              emissionClass;PHEMlight/PC_G_EU4
              accel; normal(0.8418, 0.2775); [0.504, 1.322]
              decel; normal(0.8150, 0.7521); [0.2, 2.3618]
              minGap; normal(1.5554, 0.9633); [0.1, 3.4247]
              tau; normal(0.8780, 0.3343); [0.3555, 1.4319]
              actionStepLength; 0.2


        kwargs:
          output_file_name: ${FileManager.veh_distribution_file}
          distribution_size: 1000
          distribution_name: vehDist

  Output:
    module: functions.output.TotalEmissionsHandler
    arguments:
      kwargs:
        emissions_xml: ${FileManager.emissions_file}
        output_time_filter_lower: 3600
        output_time_filter_upper: 10800
        diesel_filter: "lambda x: 'D' in x"
        gasoline_filter: "lambda x: 'G' in x"
        x_filter: "lambda x: 630 <= x <= 1900"
        sim_step: 0.1
        save_output: True

  PostProcessing:
    - module: tools.output_tools.USDOTCalibration
      path: ${Metadata.simulation_root}
      arguments:
        kwargs:
          settings: ${Metadata.cwd}/simulation_params.json
          historical_data: ${Metadata.simulation_root}/data-analysis/feb_2020/detector_average_table_600S.pkl
          save_path: ${Metadata.cwd}/calibration_results.json

    - module: functions.simulation_metrics.SimulationMetrics
      path: ${Metadata.simulation_root}
      arguments:
        kwargs:
          trip_info_file: ${FileManager.tripinfo_file}
          output_file_path: ${Metadata.cwd}/simulation_metrics.json
          warmup_time: 3600
          route_begin_ends:
            EB: ["834845345#1", "gneE14"]
            WB: ["115872656#4", "115872656#13.8"]
          diesel_filter: "lambda x: 'truck' in x"
    
    - module: functions.per_phase_delay.E3SimulationMetrics
      path: ${Metadata.simulation_root}
      arguments:
        kwargs:
          e3_output_file: ${FileManager.e3_file}
          output_file_path: ${Metadata.cwd}/per_phase_delay.json
          warmup_time: 3600

    - module: functions.free_flow_speed.FreeFlowSpeed
      path: ${Metadata.simulation_root}
      arguments:
        kwargs:
          radar_shape_file: ${Metadata.simulation_root}/sumo-xml/detectors/radar.polygon.add.xml
          fcd_output_file: ${FileManager.fcd_file}
          output_file: ${Metadata.cwd}/speed_analysis.json
          start_time: "2020-02-24T05:00:00"  # why do I need this?

SimulationCore:
  preprocessing: None
  output_path: ${Metadata.cwd}

  SimulationFunction:
    module: runners.sasumo.NoTraciSimulationSASUMO
    path: ${Metadata.simulation_root}
    arguments: # Not including the generator arguments marked for being passed to simulation
      kwargs:
        settings: ${Metadata.simulation_root}/sim-settings/sasumo/02_24_20-Coordinated.json
        simulation_output_path: ${SimulationCore.output_path}
        emissions_file_name: ${FileManager.emissions_file}
        seed: ${Metadata.random_seed}
        veh_distribution_file: ${FileManager.veh_distribution_file}

FileManager:
  veh_distribution_file: ${Metadata.cwd}/__temp__vehDist.in.xml
  emissions_file: ${Metadata.cwd}/__temp__emissions.out.xml
  tripinfo_file: ${Metadata.cwd}/__temp__tripinfo.out.xml
  fcd_file: ${Metadata.cwd}/__temp__fcd.out.xml
  e3_file: ${Metadata.cwd}/__temp__e3.out.xml





